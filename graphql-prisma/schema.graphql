### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Comment {
  author: User!
  id: String!
  post: Post!
  text: String
}

input CommentCreateInput {
  text: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createComment(authorId: String!, data: CommentCreateInput!, postId: String!): Comment
  createPost(authorId: String!, data: PostCreateInput!): Post
  createUser(data: UserCreateInput!): User!
  deletePost(id: String!): Post
  incrementPostViewCount(id: String!): Post
  togglePublishPost(id: String!): Post
}

type Post {
  author: User
  body: String
  comments: [Comment!]!
  createdAt: DateTime!
  id: Int!
  published: Boolean!
  title: String!
  updatedAt: DateTime!
  viewCount: Int!
}

input PostCreateInput {
  body: String
  published: Boolean
  title: String!
}

input PostOrderByUpdatedAtInput {
  updatedAt: SortOrder!
}

input PostUniqueInput {
  id: String
}

type Query {
  allPosts(orderBy: PostOrderByUpdatedAtInput, searchString: String, skip: Int, take: Int): [Post!]!
  allUsers: [User!]!
  commentById(id: String): Comment
  postById(id: String): Post
  postComments(postUniqueInput: PostUniqueInput!): [Comment]
  userById(id: String): User
  userNotPublished(userUniqueInput: UserUniqueInput!): [Post]
  userPublished(userUniqueInput: UserUniqueInput!): [Post]
}

enum SortOrder {
  asc
  desc
}

type User {
  age: Int
  email: String!
  id: String!
  name: String
  posts: [Post!]!
}

input UserCreateInput {
  age: Int
  email: String!
  name: String
  posts: [PostCreateInput!]
}

input UserUniqueInput {
  email: String
  id: String
}
